Ama.CRDT.Attributes.CrdtAverageRegisterStrategyAttribute
Ama.CRDT.Attributes.CrdtAverageRegisterStrategyAttribute.CrdtAverageRegisterStrategyAttribute() -> void
Ama.CRDT.Attributes.CrdtBoundedCounterStrategyAttribute
Ama.CRDT.Attributes.CrdtBoundedCounterStrategyAttribute.CrdtBoundedCounterStrategyAttribute(long min, long max) -> void
Ama.CRDT.Attributes.CrdtBoundedCounterStrategyAttribute.Max.get -> long
Ama.CRDT.Attributes.CrdtBoundedCounterStrategyAttribute.Min.get -> long
Ama.CRDT.Attributes.CrdtGCounterStrategyAttribute
Ama.CRDT.Attributes.CrdtGCounterStrategyAttribute.CrdtGCounterStrategyAttribute() -> void
Ama.CRDT.Attributes.CrdtMaxWinsStrategyAttribute
Ama.CRDT.Attributes.CrdtMaxWinsStrategyAttribute.CrdtMaxWinsStrategyAttribute() -> void
Ama.CRDT.Attributes.CrdtMinWinsStrategyAttribute
Ama.CRDT.Attributes.CrdtMinWinsStrategyAttribute.CrdtMinWinsStrategyAttribute() -> void
Ama.CRDT.Models.AverageRegisterValue
Ama.CRDT.Models.AverageRegisterValue.AverageRegisterValue() -> void
Ama.CRDT.Models.AverageRegisterValue.AverageRegisterValue(decimal Value, Ama.CRDT.Models.ICrdtTimestamp! Timestamp) -> void
Ama.CRDT.Models.AverageRegisterValue.Deconstruct(out decimal Value, out Ama.CRDT.Models.ICrdtTimestamp! Timestamp) -> void
Ama.CRDT.Models.AverageRegisterValue.Equals(Ama.CRDT.Models.AverageRegisterValue other) -> bool
Ama.CRDT.Models.AverageRegisterValue.Timestamp.get -> Ama.CRDT.Models.ICrdtTimestamp!
Ama.CRDT.Models.AverageRegisterValue.Timestamp.init -> void
Ama.CRDT.Models.AverageRegisterValue.Value.get -> decimal
Ama.CRDT.Models.AverageRegisterValue.Value.init -> void
Ama.CRDT.Models.CrdtMetadata.AverageRegisters.get -> System.Collections.Generic.IDictionary<string!, System.Collections.Generic.IDictionary<string!, Ama.CRDT.Models.AverageRegisterValue>!>!
Ama.CRDT.Services.Strategies.AverageRegisterStrategy
Ama.CRDT.Services.Strategies.AverageRegisterStrategy.ApplyOperation(object! root, Ama.CRDT.Models.CrdtMetadata! metadata, Ama.CRDT.Models.CrdtOperation operation) -> void
Ama.CRDT.Services.Strategies.AverageRegisterStrategy.AverageRegisterStrategy(Microsoft.Extensions.Options.IOptions<Ama.CRDT.Models.CrdtOptions!>! options, Ama.CRDT.Services.ICrdtTimestampProvider! timestampProvider) -> void
Ama.CRDT.Services.Strategies.AverageRegisterStrategy.GeneratePatch(Ama.CRDT.Services.ICrdtPatcher! patcher, System.Collections.Generic.List<Ama.CRDT.Models.CrdtOperation>! operations, string! path, System.Reflection.PropertyInfo! property, object? originalValue, object? modifiedValue, Ama.CRDT.Models.CrdtMetadata! originalMeta, Ama.CRDT.Models.CrdtMetadata! modifiedMeta) -> void
Ama.CRDT.Services.Strategies.BoundedCounterStrategy
Ama.CRDT.Services.Strategies.BoundedCounterStrategy.ApplyOperation(object! root, Ama.CRDT.Models.CrdtMetadata! metadata, Ama.CRDT.Models.CrdtOperation operation) -> void
Ama.CRDT.Services.Strategies.BoundedCounterStrategy.BoundedCounterStrategy(Ama.CRDT.Services.ICrdtTimestampProvider! timestampProvider, Microsoft.Extensions.Options.IOptions<Ama.CRDT.Models.CrdtOptions!>! options) -> void
Ama.CRDT.Services.Strategies.BoundedCounterStrategy.GeneratePatch(Ama.CRDT.Services.ICrdtPatcher! patcher, System.Collections.Generic.List<Ama.CRDT.Models.CrdtOperation>! operations, string! path, System.Reflection.PropertyInfo! property, object? originalValue, object? modifiedValue, Ama.CRDT.Models.CrdtMetadata! originalMeta, Ama.CRDT.Models.CrdtMetadata! modifiedMeta) -> void
Ama.CRDT.Services.Strategies.GCounterStrategy
Ama.CRDT.Services.Strategies.GCounterStrategy.ApplyOperation(object! root, Ama.CRDT.Models.CrdtMetadata! metadata, Ama.CRDT.Models.CrdtOperation operation) -> void
Ama.CRDT.Services.Strategies.GCounterStrategy.GCounterStrategy(Ama.CRDT.Services.ICrdtTimestampProvider! timestampProvider, Microsoft.Extensions.Options.IOptions<Ama.CRDT.Models.CrdtOptions!>! options) -> void
Ama.CRDT.Services.Strategies.GCounterStrategy.GeneratePatch(Ama.CRDT.Services.ICrdtPatcher! patcher, System.Collections.Generic.List<Ama.CRDT.Models.CrdtOperation>! operations, string! path, System.Reflection.PropertyInfo! property, object? originalValue, object? modifiedValue, Ama.CRDT.Models.CrdtMetadata! originalMeta, Ama.CRDT.Models.CrdtMetadata! modifiedMeta) -> void
Ama.CRDT.Services.Strategies.MaxWinsStrategy
Ama.CRDT.Services.Strategies.MaxWinsStrategy.ApplyOperation(object! root, Ama.CRDT.Models.CrdtMetadata! metadata, Ama.CRDT.Models.CrdtOperation operation) -> void
Ama.CRDT.Services.Strategies.MaxWinsStrategy.GeneratePatch(Ama.CRDT.Services.ICrdtPatcher! patcher, System.Collections.Generic.List<Ama.CRDT.Models.CrdtOperation>! operations, string! path, System.Reflection.PropertyInfo! property, object? originalValue, object? modifiedValue, Ama.CRDT.Models.CrdtMetadata! originalMeta, Ama.CRDT.Models.CrdtMetadata! modifiedMeta) -> void
Ama.CRDT.Services.Strategies.MaxWinsStrategy.MaxWinsStrategy(Microsoft.Extensions.Options.IOptions<Ama.CRDT.Models.CrdtOptions!>! options, Ama.CRDT.Services.ICrdtTimestampProvider! timestampProvider) -> void
Ama.CRDT.Services.Strategies.MinWinsStrategy
Ama.CRDT.Services.Strategies.MinWinsStrategy.ApplyOperation(object! root, Ama.CRDT.Models.CrdtMetadata! metadata, Ama.CRDT.Models.CrdtOperation operation) -> void
Ama.CRDT.Services.Strategies.MinWinsStrategy.GeneratePatch(Ama.CRDT.Services.ICrdtPatcher! patcher, System.Collections.Generic.List<Ama.CRDT.Models.CrdtOperation>! operations, string! path, System.Reflection.PropertyInfo! property, object? originalValue, object? modifiedValue, Ama.CRDT.Models.CrdtMetadata! originalMeta, Ama.CRDT.Models.CrdtMetadata! modifiedMeta) -> void
Ama.CRDT.Services.Strategies.MinWinsStrategy.MinWinsStrategy(Microsoft.Extensions.Options.IOptions<Ama.CRDT.Models.CrdtOptions!>! options, Ama.CRDT.Services.ICrdtTimestampProvider! timestampProvider) -> void
override Ama.CRDT.Models.AverageRegisterValue.GetHashCode() -> int
static Ama.CRDT.Models.AverageRegisterValue.operator !=(Ama.CRDT.Models.AverageRegisterValue left, Ama.CRDT.Models.AverageRegisterValue right) -> bool
static Ama.CRDT.Models.AverageRegisterValue.operator ==(Ama.CRDT.Models.AverageRegisterValue left, Ama.CRDT.Models.AverageRegisterValue right) -> bool
~override Ama.CRDT.Models.AverageRegisterValue.Equals(object obj) -> bool
~override Ama.CRDT.Models.AverageRegisterValue.ToString() -> string