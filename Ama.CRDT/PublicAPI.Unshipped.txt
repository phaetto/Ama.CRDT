Ama.CRDT.Attributes.CrdtAverageRegisterStrategyAttribute
Ama.CRDT.Attributes.CrdtAverageRegisterStrategyAttribute.CrdtAverageRegisterStrategyAttribute() -> void
Ama.CRDT.Attributes.CrdtBoundedCounterStrategyAttribute
Ama.CRDT.Attributes.CrdtBoundedCounterStrategyAttribute.CrdtBoundedCounterStrategyAttribute(long min, long max) -> void
Ama.CRDT.Attributes.CrdtBoundedCounterStrategyAttribute.Max.get -> long
Ama.CRDT.Attributes.CrdtBoundedCounterStrategyAttribute.Min.get -> long
Ama.CRDT.Attributes.CrdtFixedSizeArrayStrategyAttribute
Ama.CRDT.Attributes.CrdtFixedSizeArrayStrategyAttribute.CrdtFixedSizeArrayStrategyAttribute(int size) -> void
Ama.CRDT.Attributes.CrdtFixedSizeArrayStrategyAttribute.Size.get -> int
Ama.CRDT.Attributes.CrdtGCounterStrategyAttribute
Ama.CRDT.Attributes.CrdtGCounterStrategyAttribute.CrdtGCounterStrategyAttribute() -> void
Ama.CRDT.Attributes.CrdtGSetStrategyAttribute
Ama.CRDT.Attributes.CrdtGSetStrategyAttribute.CrdtGSetStrategyAttribute() -> void
Ama.CRDT.Attributes.CrdtLseqStrategyAttribute
Ama.CRDT.Attributes.CrdtLseqStrategyAttribute.CrdtLseqStrategyAttribute() -> void
Ama.CRDT.Attributes.CrdtLwwSetStrategyAttribute
Ama.CRDT.Attributes.CrdtLwwSetStrategyAttribute.CrdtLwwSetStrategyAttribute() -> void
Ama.CRDT.Attributes.CrdtMaxWinsStrategyAttribute
Ama.CRDT.Attributes.CrdtMaxWinsStrategyAttribute.CrdtMaxWinsStrategyAttribute() -> void
Ama.CRDT.Attributes.CrdtMinWinsStrategyAttribute
Ama.CRDT.Attributes.CrdtMinWinsStrategyAttribute.CrdtMinWinsStrategyAttribute() -> void
Ama.CRDT.Attributes.CrdtOrSetStrategyAttribute
Ama.CRDT.Attributes.CrdtOrSetStrategyAttribute.CrdtOrSetStrategyAttribute() -> void
Ama.CRDT.Attributes.CrdtPriorityQueueStrategyAttribute
Ama.CRDT.Attributes.CrdtPriorityQueueStrategyAttribute.CrdtPriorityQueueStrategyAttribute(string! priorityPropertyName) -> void
Ama.CRDT.Attributes.CrdtPriorityQueueStrategyAttribute.PriorityPropertyName.get -> string!
Ama.CRDT.Attributes.CrdtTwoPhaseSetStrategyAttribute
Ama.CRDT.Attributes.CrdtTwoPhaseSetStrategyAttribute.CrdtTwoPhaseSetStrategyAttribute() -> void
Ama.CRDT.Attributes.Strategies.AssociativeAttribute
Ama.CRDT.Attributes.Strategies.AssociativeAttribute.AssociativeAttribute() -> void
Ama.CRDT.Attributes.Strategies.CommutativeAttribute
Ama.CRDT.Attributes.Strategies.CommutativeAttribute.CommutativeAttribute() -> void
Ama.CRDT.Attributes.Strategies.IdempotentAttribute
Ama.CRDT.Attributes.Strategies.IdempotentAttribute.IdempotentAttribute() -> void
Ama.CRDT.Attributes.Strategies.IdempotentShortTermImplementationAttribute
Ama.CRDT.Attributes.Strategies.IdempotentShortTermImplementationAttribute.IdempotentShortTermImplementationAttribute() -> void
Ama.CRDT.Attributes.Strategies.MergeableAttribute
Ama.CRDT.Attributes.Strategies.MergeableAttribute.MergeableAttribute() -> void
Ama.CRDT.Attributes.Strategies.SequentialOperationsAttribute
Ama.CRDT.Attributes.Strategies.SequentialOperationsAttribute.SequentialOperationsAttribute() -> void
Ama.CRDT.Models.AverageRegisterValue
Ama.CRDT.Models.AverageRegisterValue.AverageRegisterValue() -> void
Ama.CRDT.Models.AverageRegisterValue.AverageRegisterValue(decimal Value, Ama.CRDT.Models.ICrdtTimestamp! Timestamp) -> void
Ama.CRDT.Models.AverageRegisterValue.Deconstruct(out decimal Value, out Ama.CRDT.Models.ICrdtTimestamp! Timestamp) -> void
Ama.CRDT.Models.AverageRegisterValue.Equals(Ama.CRDT.Models.AverageRegisterValue other) -> bool
Ama.CRDT.Models.AverageRegisterValue.Timestamp.get -> Ama.CRDT.Models.ICrdtTimestamp!
Ama.CRDT.Models.AverageRegisterValue.Timestamp.init -> void
Ama.CRDT.Models.AverageRegisterValue.Value.get -> decimal
Ama.CRDT.Models.AverageRegisterValue.Value.init -> void
Ama.CRDT.Models.CrdtMetadata.AverageRegisters.get -> System.Collections.Generic.IDictionary<string!, System.Collections.Generic.IDictionary<string!, Ama.CRDT.Models.AverageRegisterValue>!>!
Ama.CRDT.Models.CrdtMetadata.LseqTrackers.get -> System.Collections.Generic.IDictionary<string!, System.Collections.Generic.List<Ama.CRDT.Models.LseqItem>!>!
Ama.CRDT.Models.CrdtMetadata.LwwSets.get -> System.Collections.Generic.IDictionary<string!, (System.Collections.Generic.IDictionary<object!, Ama.CRDT.Models.ICrdtTimestamp!>! Adds, System.Collections.Generic.IDictionary<object!, Ama.CRDT.Models.ICrdtTimestamp!>! Removes)>!
Ama.CRDT.Models.CrdtMetadata.OrSets.get -> System.Collections.Generic.IDictionary<string!, (System.Collections.Generic.IDictionary<object!, System.Collections.Generic.ISet<System.Guid>!>! Adds, System.Collections.Generic.IDictionary<object!, System.Collections.Generic.ISet<System.Guid>!>! Removes)>!
Ama.CRDT.Models.CrdtMetadata.PriorityQueues.get -> System.Collections.Generic.IDictionary<string!, (System.Collections.Generic.IDictionary<object!, Ama.CRDT.Models.ICrdtTimestamp!>! Adds, System.Collections.Generic.IDictionary<object!, Ama.CRDT.Models.ICrdtTimestamp!>! Removes)>!
Ama.CRDT.Models.CrdtMetadata.TwoPhaseSets.get -> System.Collections.Generic.IDictionary<string!, (System.Collections.Generic.ISet<object!>! Adds, System.Collections.Generic.ISet<object!>! Tomstones)>!
Ama.CRDT.Models.LseqIdentifier
Ama.CRDT.Models.LseqIdentifier.CompareTo(Ama.CRDT.Models.LseqIdentifier other) -> int
Ama.CRDT.Models.LseqIdentifier.Equals(Ama.CRDT.Models.LseqIdentifier other) -> bool
Ama.CRDT.Models.LseqIdentifier.LseqIdentifier() -> void
Ama.CRDT.Models.LseqIdentifier.LseqIdentifier(System.Collections.Immutable.ImmutableList<(int Position, string! ReplicaId)>! path) -> void
Ama.CRDT.Models.LseqIdentifier.Path.get -> System.Collections.Immutable.ImmutableList<(int Position, string! ReplicaId)>!
Ama.CRDT.Models.LseqItem
Ama.CRDT.Models.LseqItem.Deconstruct(out Ama.CRDT.Models.LseqIdentifier Identifier, out object? Value) -> void
Ama.CRDT.Models.LseqItem.Equals(Ama.CRDT.Models.LseqItem other) -> bool
Ama.CRDT.Models.LseqItem.Identifier.get -> Ama.CRDT.Models.LseqIdentifier
Ama.CRDT.Models.LseqItem.Identifier.init -> void
Ama.CRDT.Models.LseqItem.LseqItem() -> void
Ama.CRDT.Models.LseqItem.LseqItem(Ama.CRDT.Models.LseqIdentifier Identifier, object? Value) -> void
Ama.CRDT.Models.LseqItem.Value.get -> object?
Ama.CRDT.Models.LseqItem.Value.init -> void
Ama.CRDT.Models.MovePayload
Ama.CRDT.Models.MovePayload.Deconstruct(out object! ElementIdentifier, out object? TargetParentIdentifier) -> void
Ama.CRDT.Models.MovePayload.ElementIdentifier.get -> object!
Ama.CRDT.Models.MovePayload.ElementIdentifier.init -> void
Ama.CRDT.Models.MovePayload.Equals(Ama.CRDT.Models.MovePayload other) -> bool
Ama.CRDT.Models.MovePayload.MovePayload() -> void
Ama.CRDT.Models.MovePayload.MovePayload(object! ElementIdentifier, object? TargetParentIdentifier) -> void
Ama.CRDT.Models.MovePayload.TargetParentIdentifier.get -> object?
Ama.CRDT.Models.MovePayload.TargetParentIdentifier.init -> void
Ama.CRDT.Models.OrSetAddItem
Ama.CRDT.Models.OrSetAddItem.Deconstruct(out object! Value, out System.Guid Tag) -> void
Ama.CRDT.Models.OrSetAddItem.Equals(Ama.CRDT.Models.OrSetAddItem other) -> bool
Ama.CRDT.Models.OrSetAddItem.OrSetAddItem() -> void
Ama.CRDT.Models.OrSetAddItem.OrSetAddItem(object! Value, System.Guid Tag) -> void
Ama.CRDT.Models.OrSetAddItem.Tag.get -> System.Guid
Ama.CRDT.Models.OrSetAddItem.Tag.init -> void
Ama.CRDT.Models.OrSetAddItem.Value.get -> object!
Ama.CRDT.Models.OrSetAddItem.Value.init -> void
Ama.CRDT.Models.OrSetRemoveItem
Ama.CRDT.Models.OrSetRemoveItem.Deconstruct(out object! Value, out System.Collections.Generic.ISet<System.Guid>! Tags) -> void
Ama.CRDT.Models.OrSetRemoveItem.Equals(Ama.CRDT.Models.OrSetRemoveItem other) -> bool
Ama.CRDT.Models.OrSetRemoveItem.OrSetRemoveItem() -> void
Ama.CRDT.Models.OrSetRemoveItem.OrSetRemoveItem(object! Value, System.Collections.Generic.ISet<System.Guid>! Tags) -> void
Ama.CRDT.Models.OrSetRemoveItem.Tags.get -> System.Collections.Generic.ISet<System.Guid>!
Ama.CRDT.Models.OrSetRemoveItem.Tags.init -> void
Ama.CRDT.Models.OrSetRemoveItem.Value.get -> object!
Ama.CRDT.Models.OrSetRemoveItem.Value.init -> void
Ama.CRDT.Models.Serialization.CrdtMetadataJsonResolver
Ama.CRDT.Models.Serialization.CrdtMetadataJsonResolver.CrdtMetadataJsonResolver() -> void
Ama.CRDT.Services.CrdtMetadataManager.Clone(Ama.CRDT.Models.CrdtMetadata! metadata) -> Ama.CRDT.Models.CrdtMetadata!
Ama.CRDT.Services.CrdtMetadataManager.CrdtMetadataManager(Ama.CRDT.Services.Strategies.ICrdtStrategyManager! strategyManager, Ama.CRDT.Services.ICrdtTimestampProvider! timestampProvider, Ama.CRDT.Services.Strategies.IElementComparerProvider! elementComparerProvider) -> void
Ama.CRDT.Services.CrdtMetadataManager.Initialize<T>(Ama.CRDT.Models.CrdtMetadata! metadata, T! document) -> void
Ama.CRDT.Services.CrdtMetadataManager.Initialize<T>(Ama.CRDT.Models.CrdtMetadata! metadata, T! document, Ama.CRDT.Models.ICrdtTimestamp! timestamp) -> void
Ama.CRDT.Services.ICrdtMetadataManager.Clone(Ama.CRDT.Models.CrdtMetadata! metadata) -> Ama.CRDT.Models.CrdtMetadata!
Ama.CRDT.Services.ICrdtMetadataManager.Initialize<T>(Ama.CRDT.Models.CrdtMetadata! metadata, T! document) -> void
Ama.CRDT.Services.ICrdtMetadataManager.Initialize<T>(Ama.CRDT.Models.CrdtMetadata! metadata, T! document, Ama.CRDT.Models.ICrdtTimestamp! timestamp) -> void
Ama.CRDT.Services.Strategies.AverageRegisterStrategy
Ama.CRDT.Services.Strategies.AverageRegisterStrategy.ApplyOperation(object! root, Ama.CRDT.Models.CrdtMetadata! metadata, Ama.CRDT.Models.CrdtOperation operation) -> void
Ama.CRDT.Services.Strategies.AverageRegisterStrategy.AverageRegisterStrategy(Microsoft.Extensions.Options.IOptions<Ama.CRDT.Models.CrdtOptions!>! options, Ama.CRDT.Services.ICrdtTimestampProvider! timestampProvider) -> void
Ama.CRDT.Services.Strategies.AverageRegisterStrategy.GeneratePatch(Ama.CRDT.Services.ICrdtPatcher! patcher, System.Collections.Generic.List<Ama.CRDT.Models.CrdtOperation>! operations, string! path, System.Reflection.PropertyInfo! property, object? originalValue, object? modifiedValue, Ama.CRDT.Models.CrdtMetadata! originalMeta, Ama.CRDT.Models.CrdtMetadata! modifiedMeta) -> void
Ama.CRDT.Services.Strategies.BoundedCounterStrategy
Ama.CRDT.Services.Strategies.BoundedCounterStrategy.ApplyOperation(object! root, Ama.CRDT.Models.CrdtMetadata! metadata, Ama.CRDT.Models.CrdtOperation operation) -> void
Ama.CRDT.Services.Strategies.BoundedCounterStrategy.BoundedCounterStrategy(Ama.CRDT.Services.ICrdtTimestampProvider! timestampProvider, Microsoft.Extensions.Options.IOptions<Ama.CRDT.Models.CrdtOptions!>! options) -> void
Ama.CRDT.Services.Strategies.BoundedCounterStrategy.GeneratePatch(Ama.CRDT.Services.ICrdtPatcher! patcher, System.Collections.Generic.List<Ama.CRDT.Models.CrdtOperation>! operations, string! path, System.Reflection.PropertyInfo! property, object? originalValue, object? modifiedValue, Ama.CRDT.Models.CrdtMetadata! originalMeta, Ama.CRDT.Models.CrdtMetadata! modifiedMeta) -> void
Ama.CRDT.Services.Strategies.FixedSizeArrayStrategy
Ama.CRDT.Services.Strategies.FixedSizeArrayStrategy.ApplyOperation(object! root, Ama.CRDT.Models.CrdtMetadata! metadata, Ama.CRDT.Models.CrdtOperation operation) -> void
Ama.CRDT.Services.Strategies.FixedSizeArrayStrategy.FixedSizeArrayStrategy(Ama.CRDT.Services.ICrdtTimestampProvider! timestampProvider, Microsoft.Extensions.Options.IOptions<Ama.CRDT.Models.CrdtOptions!>! options) -> void
Ama.CRDT.Services.Strategies.FixedSizeArrayStrategy.GeneratePatch(Ama.CRDT.Services.ICrdtPatcher! patcher, System.Collections.Generic.List<Ama.CRDT.Models.CrdtOperation>! operations, string! path, System.Reflection.PropertyInfo! property, object? originalValue, object? modifiedValue, Ama.CRDT.Models.CrdtMetadata! originalMeta, Ama.CRDT.Models.CrdtMetadata! modifiedMeta) -> void
Ama.CRDT.Services.Strategies.GCounterStrategy
Ama.CRDT.Services.Strategies.GCounterStrategy.ApplyOperation(object! root, Ama.CRDT.Models.CrdtMetadata! metadata, Ama.CRDT.Models.CrdtOperation operation) -> void
Ama.CRDT.Services.Strategies.GCounterStrategy.GCounterStrategy(Ama.CRDT.Services.ICrdtTimestampProvider! timestampProvider, Microsoft.Extensions.Options.IOptions<Ama.CRDT.Models.CrdtOptions!>! options) -> void
Ama.CRDT.Services.Strategies.GCounterStrategy.GeneratePatch(Ama.CRDT.Services.ICrdtPatcher! patcher, System.Collections.Generic.List<Ama.CRDT.Models.CrdtOperation>! operations, string! path, System.Reflection.PropertyInfo! property, object? originalValue, object? modifiedValue, Ama.CRDT.Models.CrdtMetadata! originalMeta, Ama.CRDT.Models.CrdtMetadata! modifiedMeta) -> void
Ama.CRDT.Services.Strategies.GSetStrategy
Ama.CRDT.Services.Strategies.GSetStrategy.ApplyOperation(object! root, Ama.CRDT.Models.CrdtMetadata! metadata, Ama.CRDT.Models.CrdtOperation operation) -> void
Ama.CRDT.Services.Strategies.GSetStrategy.GeneratePatch(Ama.CRDT.Services.ICrdtPatcher! patcher, System.Collections.Generic.List<Ama.CRDT.Models.CrdtOperation>! operations, string! path, System.Reflection.PropertyInfo! property, object? originalValue, object? modifiedValue, Ama.CRDT.Models.CrdtMetadata! originalMeta, Ama.CRDT.Models.CrdtMetadata! modifiedMeta) -> void
Ama.CRDT.Services.Strategies.GSetStrategy.GSetStrategy(Ama.CRDT.Services.Strategies.IElementComparerProvider! comparerProvider, Ama.CRDT.Services.ICrdtTimestampProvider! timestampProvider, Microsoft.Extensions.Options.IOptions<Ama.CRDT.Models.CrdtOptions!>! options) -> void
Ama.CRDT.Services.Strategies.LseqStrategy
Ama.CRDT.Services.Strategies.LseqStrategy.ApplyOperation(object! root, Ama.CRDT.Models.CrdtMetadata! metadata, Ama.CRDT.Models.CrdtOperation operation) -> void
Ama.CRDT.Services.Strategies.LseqStrategy.GeneratePatch(Ama.CRDT.Services.ICrdtPatcher! patcher, System.Collections.Generic.List<Ama.CRDT.Models.CrdtOperation>! operations, string! path, System.Reflection.PropertyInfo! property, object? originalValue, object? modifiedValue, Ama.CRDT.Models.CrdtMetadata! originalMeta, Ama.CRDT.Models.CrdtMetadata! modifiedMeta) -> void
Ama.CRDT.Services.Strategies.LseqStrategy.LseqStrategy(Ama.CRDT.Services.Strategies.IElementComparerProvider! elementComparerProvider, Microsoft.Extensions.Options.IOptions<Ama.CRDT.Models.CrdtOptions!>! options) -> void
Ama.CRDT.Services.Strategies.LwwSetStrategy
Ama.CRDT.Services.Strategies.LwwSetStrategy.ApplyOperation(object! root, Ama.CRDT.Models.CrdtMetadata! metadata, Ama.CRDT.Models.CrdtOperation operation) -> void
Ama.CRDT.Services.Strategies.LwwSetStrategy.GeneratePatch(Ama.CRDT.Services.ICrdtPatcher! patcher, System.Collections.Generic.List<Ama.CRDT.Models.CrdtOperation>! operations, string! path, System.Reflection.PropertyInfo! property, object? originalValue, object? modifiedValue, Ama.CRDT.Models.CrdtMetadata! originalMeta, Ama.CRDT.Models.CrdtMetadata! modifiedMeta) -> void
Ama.CRDT.Services.Strategies.LwwSetStrategy.LwwSetStrategy(Ama.CRDT.Services.Strategies.IElementComparerProvider! comparerProvider, Ama.CRDT.Services.ICrdtTimestampProvider! timestampProvider, Microsoft.Extensions.Options.IOptions<Ama.CRDT.Models.CrdtOptions!>! options) -> void
Ama.CRDT.Services.Strategies.MaxWinsStrategy
Ama.CRDT.Services.Strategies.MaxWinsStrategy.ApplyOperation(object! root, Ama.CRDT.Models.CrdtMetadata! metadata, Ama.CRDT.Models.CrdtOperation operation) -> void
Ama.CRDT.Services.Strategies.MaxWinsStrategy.GeneratePatch(Ama.CRDT.Services.ICrdtPatcher! patcher, System.Collections.Generic.List<Ama.CRDT.Models.CrdtOperation>! operations, string! path, System.Reflection.PropertyInfo! property, object? originalValue, object? modifiedValue, Ama.CRDT.Models.CrdtMetadata! originalMeta, Ama.CRDT.Models.CrdtMetadata! modifiedMeta) -> void
Ama.CRDT.Services.Strategies.MaxWinsStrategy.MaxWinsStrategy(Microsoft.Extensions.Options.IOptions<Ama.CRDT.Models.CrdtOptions!>! options, Ama.CRDT.Services.ICrdtTimestampProvider! timestampProvider) -> void
Ama.CRDT.Services.Strategies.MinWinsStrategy
Ama.CRDT.Services.Strategies.MinWinsStrategy.ApplyOperation(object! root, Ama.CRDT.Models.CrdtMetadata! metadata, Ama.CRDT.Models.CrdtOperation operation) -> void
Ama.CRDT.Services.Strategies.MinWinsStrategy.GeneratePatch(Ama.CRDT.Services.ICrdtPatcher! patcher, System.Collections.Generic.List<Ama.CRDT.Models.CrdtOperation>! operations, string! path, System.Reflection.PropertyInfo! property, object? originalValue, object? modifiedValue, Ama.CRDT.Models.CrdtMetadata! originalMeta, Ama.CRDT.Models.CrdtMetadata! modifiedMeta) -> void
Ama.CRDT.Services.Strategies.MinWinsStrategy.MinWinsStrategy(Microsoft.Extensions.Options.IOptions<Ama.CRDT.Models.CrdtOptions!>! options, Ama.CRDT.Services.ICrdtTimestampProvider! timestampProvider) -> void
Ama.CRDT.Services.Strategies.OrSetStrategy
Ama.CRDT.Services.Strategies.OrSetStrategy.ApplyOperation(object! root, Ama.CRDT.Models.CrdtMetadata! metadata, Ama.CRDT.Models.CrdtOperation operation) -> void
Ama.CRDT.Services.Strategies.OrSetStrategy.GeneratePatch(Ama.CRDT.Services.ICrdtPatcher! patcher, System.Collections.Generic.List<Ama.CRDT.Models.CrdtOperation>! operations, string! path, System.Reflection.PropertyInfo! property, object? originalValue, object? modifiedValue, Ama.CRDT.Models.CrdtMetadata! originalMeta, Ama.CRDT.Models.CrdtMetadata! modifiedMeta) -> void
Ama.CRDT.Services.Strategies.OrSetStrategy.OrSetStrategy(Ama.CRDT.Services.Strategies.IElementComparerProvider! comparerProvider, Ama.CRDT.Services.ICrdtTimestampProvider! timestampProvider, Microsoft.Extensions.Options.IOptions<Ama.CRDT.Models.CrdtOptions!>! options) -> void
Ama.CRDT.Services.Strategies.PriorityQueueStrategy
Ama.CRDT.Services.Strategies.PriorityQueueStrategy.ApplyOperation(object! root, Ama.CRDT.Models.CrdtMetadata! metadata, Ama.CRDT.Models.CrdtOperation operation) -> void
Ama.CRDT.Services.Strategies.PriorityQueueStrategy.GeneratePatch(Ama.CRDT.Services.ICrdtPatcher! patcher, System.Collections.Generic.List<Ama.CRDT.Models.CrdtOperation>! operations, string! path, System.Reflection.PropertyInfo! property, object? originalValue, object? modifiedValue, Ama.CRDT.Models.CrdtMetadata! originalMeta, Ama.CRDT.Models.CrdtMetadata! modifiedMeta) -> void
Ama.CRDT.Services.Strategies.PriorityQueueStrategy.PriorityQueueStrategy(Ama.CRDT.Services.Strategies.IElementComparerProvider! comparerProvider, Ama.CRDT.Services.ICrdtTimestampProvider! timestampProvider, Microsoft.Extensions.Options.IOptions<Ama.CRDT.Models.CrdtOptions!>! options) -> void
Ama.CRDT.Services.Strategies.TwoPhaseSetStrategy
Ama.CRDT.Services.Strategies.TwoPhaseSetStrategy.ApplyOperation(object! root, Ama.CRDT.Models.CrdtMetadata! metadata, Ama.CRDT.Models.CrdtOperation operation) -> void
Ama.CRDT.Services.Strategies.TwoPhaseSetStrategy.GeneratePatch(Ama.CRDT.Services.ICrdtPatcher! patcher, System.Collections.Generic.List<Ama.CRDT.Models.CrdtOperation>! operations, string! path, System.Reflection.PropertyInfo! property, object? originalValue, object? modifiedValue, Ama.CRDT.Models.CrdtMetadata! originalMeta, Ama.CRDT.Models.CrdtMetadata! modifiedMeta) -> void
Ama.CRDT.Services.Strategies.TwoPhaseSetStrategy.TwoPhaseSetStrategy(Ama.CRDT.Services.Strategies.IElementComparerProvider! comparerProvider, Ama.CRDT.Services.ICrdtTimestampProvider! timestampProvider, Microsoft.Extensions.Options.IOptions<Ama.CRDT.Models.CrdtOptions!>! options) -> void
override Ama.CRDT.Models.AverageRegisterValue.GetHashCode() -> int
override Ama.CRDT.Models.LseqIdentifier.GetHashCode() -> int
override Ama.CRDT.Models.LseqIdentifier.ToString() -> string!
override Ama.CRDT.Models.LseqItem.GetHashCode() -> int
override Ama.CRDT.Models.MovePayload.GetHashCode() -> int
override Ama.CRDT.Models.OrSetAddItem.GetHashCode() -> int
override Ama.CRDT.Models.OrSetRemoveItem.GetHashCode() -> int
override Ama.CRDT.Models.Serialization.CrdtMetadataJsonResolver.GetTypeInfo(System.Type! type, System.Text.Json.JsonSerializerOptions! options) -> System.Text.Json.Serialization.Metadata.JsonTypeInfo!
static Ama.CRDT.Models.AverageRegisterValue.operator !=(Ama.CRDT.Models.AverageRegisterValue left, Ama.CRDT.Models.AverageRegisterValue right) -> bool
static Ama.CRDT.Models.AverageRegisterValue.operator ==(Ama.CRDT.Models.AverageRegisterValue left, Ama.CRDT.Models.AverageRegisterValue right) -> bool
static Ama.CRDT.Models.CrdtMetadata.JsonResolver.get -> System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver!
static Ama.CRDT.Models.LseqIdentifier.operator !=(Ama.CRDT.Models.LseqIdentifier left, Ama.CRDT.Models.LseqIdentifier right) -> bool
static Ama.CRDT.Models.LseqIdentifier.operator ==(Ama.CRDT.Models.LseqIdentifier left, Ama.CRDT.Models.LseqIdentifier right) -> bool
static Ama.CRDT.Models.LseqItem.operator !=(Ama.CRDT.Models.LseqItem left, Ama.CRDT.Models.LseqItem right) -> bool
static Ama.CRDT.Models.LseqItem.operator ==(Ama.CRDT.Models.LseqItem left, Ama.CRDT.Models.LseqItem right) -> bool
static Ama.CRDT.Models.MovePayload.operator !=(Ama.CRDT.Models.MovePayload left, Ama.CRDT.Models.MovePayload right) -> bool
static Ama.CRDT.Models.MovePayload.operator ==(Ama.CRDT.Models.MovePayload left, Ama.CRDT.Models.MovePayload right) -> bool
static Ama.CRDT.Models.OrSetAddItem.operator !=(Ama.CRDT.Models.OrSetAddItem left, Ama.CRDT.Models.OrSetAddItem right) -> bool
static Ama.CRDT.Models.OrSetAddItem.operator ==(Ama.CRDT.Models.OrSetAddItem left, Ama.CRDT.Models.OrSetAddItem right) -> bool
static Ama.CRDT.Models.OrSetRemoveItem.operator !=(Ama.CRDT.Models.OrSetRemoveItem left, Ama.CRDT.Models.OrSetRemoveItem right) -> bool
static Ama.CRDT.Models.OrSetRemoveItem.operator ==(Ama.CRDT.Models.OrSetRemoveItem left, Ama.CRDT.Models.OrSetRemoveItem right) -> bool
~override Ama.CRDT.Models.AverageRegisterValue.Equals(object obj) -> bool
~override Ama.CRDT.Models.AverageRegisterValue.ToString() -> string
~override Ama.CRDT.Models.LseqIdentifier.Equals(object obj) -> bool
~override Ama.CRDT.Models.LseqItem.Equals(object obj) -> bool
~override Ama.CRDT.Models.LseqItem.ToString() -> string
~override Ama.CRDT.Models.MovePayload.Equals(object obj) -> bool
~override Ama.CRDT.Models.MovePayload.ToString() -> string
~override Ama.CRDT.Models.OrSetAddItem.Equals(object obj) -> bool
~override Ama.CRDT.Models.OrSetAddItem.ToString() -> string
~override Ama.CRDT.Models.OrSetRemoveItem.Equals(object obj) -> bool
~override Ama.CRDT.Models.OrSetRemoveItem.ToString() -> string