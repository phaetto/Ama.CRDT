name: Publish Ama.CRDT to NuGet

on:
  push:
    branches:
      - master

env:
  MAJOR_VERSION: 0
  MINOR_VERSION: 1
  PROJECT_PATH: 'Ama.CRDT/Ama.CRDT.csproj'
  PACKAGE_OUTPUT_DIRECTORY: '${{ github.workspace }}/nuget'

jobs:
  build-test-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Set Version
        id: versioning
        run: |
          # The package version format is MAJOR.MINOR.YYMMDD-ciHHMM.
          PATCH_NUMBER=$(date -u +'%y%m%d')
          BUILD_TIME=$(date -u +'%H%M')
          PACKAGE_VERSION="${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.${PATCH_NUMBER}-ci${BUILD_TIME}"

          # The assembly version format is Major.Minor.Build.Revision, where Build and Revision must be less than 65536.
          # We use a hardcoded epoch for 2000-01-01 to make the calculation robust.
          NOW_SECONDS=$(date -u +%s)
          CRDT_EPOCH_SECONDS=946684800 # Seconds from 1970-01-01 to 2000-01-01 UTC.
          
          if [ "$NOW_SECONDS" -lt "$CRDT_EPOCH_SECONDS" ]; then
            echo "Clock skew detected. Current time is before the year 2000."
            exit 1
          fi

          DIFF_SECONDS=$(( NOW_SECONDS - CRDT_EPOCH_SECONDS ))
          
          # Build: Days since January 1, 2000. This is guaranteed to be in the valid range.
          ASSEMBLY_BUILD_NUMBER=$(( DIFF_SECONDS / 86400 ))

          # Revision: Seconds since UTC midnight, divided by 2. This is also in the valid range.
          SECONDS_SINCE_MIDNIGHT=$(( NOW_SECONDS % 86400 ))
          ASSEMBLY_REVISION_NUMBER=$(( SECONDS_SINCE_MIDNIGHT / 2 ))
          
          ASSEMBLY_VERSION="${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.${ASSEMBLY_BUILD_NUMBER}.${ASSEMBLY_REVISION_NUMBER}"
          
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV
          echo "ASSEMBLY_VERSION=${ASSEMBLY_VERSION}" >> $GITHUB_ENV

          echo "Package version: ${PACKAGE_VERSION}"
          echo "Assembly version: ${ASSEMBLY_VERSION}"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore -p:PackageVersion=${{ env.PACKAGE_VERSION }} -p:AssemblyVersion=${{ env.ASSEMBLY_VERSION }}

      - name: Test
        run: dotnet test --configuration Release --no-build --verbosity normal -p:AssemblyVersion=${{ env.ASSEMBLY_VERSION }}

      - name: Pack
        run: dotnet pack ${{ env.PROJECT_PATH }} --configuration Release --no-build --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }} -p:PackageVersion=${{ env.PACKAGE_VERSION }}

      - name: Push to NuGet
        run: dotnet nuget push "${{ env.PACKAGE_OUTPUT_DIRECTORY }}/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source "https://api.nuget.org/v3/index.json"